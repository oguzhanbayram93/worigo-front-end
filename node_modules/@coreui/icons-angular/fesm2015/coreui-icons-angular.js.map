{"version":3,"file":"coreui-icons-angular.js","sources":["ng://@coreui/icons-angular/lib/icon-set/icon-set.service.ts","ng://@coreui/icons-angular/lib/icon/icon.component.ts","ng://@coreui/icons-angular/lib/shared/html-attr.directive.ts","ng://@coreui/icons-angular/lib/icon/icon.module.ts","ng://@coreui/icons-angular/lib/icon-set/icon-set.module.ts","ng://@coreui/icons-angular/public-api.ts","ng://@coreui/icons-angular/coreui-icons-angular.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nexport interface IIconSet {\r\n  [iconName: string]: string[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IconSetService {\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  private _icons: IIconSet = {};\r\n\r\n  constructor() {}\r\n\r\n  set icons(iconSet) {\r\n    this._icons = iconSet;\r\n  }\r\n  get icons() {\r\n    return this._icons;\r\n  }\r\n\r\n  public getIcon(name) {\r\n    const icon = this.icons[name];\r\n    if (!icon) {\r\n      console.warn(`CoreUI WARN: Icon ${name} is not registered in IconService`);\r\n    }\r\n    return this.icons[name];\r\n  }\r\n}\r\n","import {Component, Input} from '@angular/core';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\nimport {IconSetService} from '../icon-set/icon-set.service';\r\nimport classNames from 'classnames';\r\n\r\n@Component({\r\n  selector: 'c-icon',\r\n  templateUrl: './icon.component.html',\r\n  styleUrls: ['./icon.component.scss']\r\n})\r\nexport class IconComponent {\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  private _name: string;\r\n  // tslint:disable-next-line:variable-name\r\n  private _viewBox: string;\r\n\r\n  @Input() attributes: any = { role: 'img'};\r\n  @Input()\r\n  set name(name: string) {\r\n    this._name = name;\r\n  }\r\n  get name(): string {\r\n    const nameIsKebabCase = this._name && this._name.includes('-');\r\n    return nameIsKebabCase ? this.toCamelCase(this._name) : this._name;\r\n  }\r\n  @Input() content: string | string[];\r\n  @Input() size: 'custom' | 'custom-size' | 'sm' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl' | '5xl' | '6xl' | '7xl' | '8xl' | '9xl' | '' = '';\r\n  @Input() src: string;\r\n  @Input() title: string;\r\n  @Input() use = '';\r\n  @Input() customClasses: string;\r\n  @Input()\r\n  set viewBox(viewBox: string) {\r\n    this._viewBox = viewBox;\r\n  }\r\n  get viewBox(): string {\r\n    return this._viewBox || `0 0 ${ this.scale }`;\r\n  }\r\n  @Input() width;\r\n  @Input() height;\r\n\r\n  get titleCode() {\r\n    return this.title ? `<title>${this.title}</title>` : '';\r\n  }\r\n\r\n  get code() {\r\n    if (this.content) {\r\n      return this.content;\r\n    } else if (this.iconSet) {\r\n      return this.iconSet.getIcon(this.name);\r\n    }\r\n    console.warn(`c-icon component: icon name '${this.name}' does not exist for IconSet service. ` +\r\n      `To use icon by 'name' prop you need to add it to IconSet service. \\n`,\r\n      this.name\r\n    );\r\n    return undefined;\r\n  }\r\n  get iconCode() {\r\n    const code = Array.isArray(this.code) ? this.code[1] || this.code[0] : this.code;\r\n    return this.sanitizer.bypassSecurityTrustHtml(this.titleCode + code);\r\n  }\r\n\r\n  get scale() {\r\n    return Array.isArray(this.code) && this.code.length > 1 ? this.code[0] : '64 64';\r\n  }\r\n\r\n  get computedSize() {\r\n    const addCustom = !this.size && (this.width || this.height);\r\n    return this.size === 'custom' || addCustom ? 'custom-size' : this.size;\r\n  }\r\n  get computedClasses() {\r\n    const classes = classNames(\r\n      this.customClasses,\r\n      {\r\n        'c-icon': true,\r\n        [`c-icon-${this.computedSize}`]: !!this.computedSize\r\n      },\r\n    );\r\n    return classes;\r\n  }\r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer,\r\n    private iconSet: IconSetService\r\n  ) { }\r\n\r\n  toCamelCase(str) {\r\n    return str.replace(/([-_][a-z0-9])/ig, ($1) => {\r\n      return $1.toUpperCase().replace('-', '');\r\n    });\r\n  }\r\n}\r\n","import {Directive, ElementRef, Input, OnInit, Renderer2} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[cHtmlAttr]',\r\n  exportAs: 'cHtmlAttr'\r\n})\r\nexport class HtmlAttributesDirective implements OnInit {\r\n\r\n  @Input() cHtmlAttr: {[key: string]: any };\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private el: ElementRef\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    const attribs = this.cHtmlAttr;\r\n    for (const attr in attribs) {\r\n      if (attr === 'style' && typeof(attribs[attr]) === 'object' ) {\r\n        this.setStyle(attribs[attr]);\r\n      } else if (attr === 'class') {\r\n        this.addClass(attribs[attr]);\r\n      } else {\r\n        this.setAttrib(attr, attribs[attr]);\r\n      }\r\n    }\r\n  }\r\n\r\n  private setStyle(styles) {\r\n    // tslint:disable-next-line:forin\r\n    for (const style in styles) {\r\n      this.renderer.setStyle(this.el.nativeElement, style, styles[style] );\r\n    }\r\n  }\r\n\r\n  private addClass(classes) {\r\n    const classArray = (Array.isArray(classes) ? classes : classes.split(' '));\r\n    classArray.filter((element) => element.length > 0).forEach(element => {\r\n      this.renderer.addClass(this.el.nativeElement, element );\r\n    });\r\n  }\r\n\r\n  private setAttrib(key, value) {\r\n    value !== null ?\r\n      this.renderer.setAttribute(this.el.nativeElement, key, value ) :\r\n      this.renderer.removeAttribute(this.el.nativeElement, key);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {IconComponent} from './icon.component';\r\nimport { HtmlAttributesDirective } from '../shared/html-attr.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    IconComponent,\r\n    HtmlAttributesDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  exports: [\r\n    IconComponent,\r\n    HtmlAttributesDirective\r\n  ],\r\n})\r\nexport class IconModule {}\r\n","import {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {IconSetService} from './icon-set.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  providers: [\r\n    IconSetService\r\n  ]\r\n})\r\nexport class IconSetModule {\r\n  constructor(@Optional() @SkipSelf() parentModule?: IconSetModule) {\r\n    if (parentModule) {\r\n      throw new Error(\r\n        'CoreUI IconSetModule is already loaded. Import it in the AppModule only');\r\n    }\r\n  }\r\n\r\n  static forRoot(): ModuleWithProviders<IconSetModule> {\r\n    return {\r\n      ngModule: IconSetModule,\r\n      providers: [\r\n        {provide: IconSetService}\r\n      ]\r\n    };\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of @coreui/icons-angular\r\n */\r\nexport { IconComponent } from './lib/icon/icon.component';\r\nexport { IconModule } from './lib/icon/icon.module';\r\nexport { IconSetService, IIconSet } from './lib/icon-set/icon-set.service';\r\nexport { IconSetModule } from './lib/icon-set/icon-set.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {HtmlAttributesDirective as Éµa} from './lib/shared/html-attr.directive';"],"names":[],"mappings":"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"}