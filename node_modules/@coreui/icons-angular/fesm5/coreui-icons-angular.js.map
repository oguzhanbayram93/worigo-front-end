{"version":3,"file":"coreui-icons-angular.js","sources":["ng://@coreui/icons-angular/lib/icon-set/icon-set.service.ts","ng://@coreui/icons-angular/lib/icon/icon.component.ts","ng://@coreui/icons-angular/lib/shared/html-attr.directive.ts","ng://@coreui/icons-angular/lib/icon/icon.module.ts","ng://@coreui/icons-angular/lib/icon-set/icon-set.module.ts","ng://@coreui/icons-angular/public-api.ts","ng://@coreui/icons-angular/coreui-icons-angular.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nexport interface IIconSet {\r\n  [iconName: string]: string[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class IconSetService {\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  private _icons: IIconSet = {};\r\n\r\n  constructor() {}\r\n\r\n  set icons(iconSet) {\r\n    this._icons = iconSet;\r\n  }\r\n  get icons() {\r\n    return this._icons;\r\n  }\r\n\r\n  public getIcon(name) {\r\n    const icon = this.icons[name];\r\n    if (!icon) {\r\n      console.warn(`CoreUI WARN: Icon ${name} is not registered in IconService`);\r\n    }\r\n    return this.icons[name];\r\n  }\r\n}\r\n","import {Component, Input} from '@angular/core';\r\nimport {DomSanitizer} from '@angular/platform-browser';\r\nimport {IconSetService} from '../icon-set/icon-set.service';\r\nimport classNames from 'classnames';\r\n\r\n@Component({\r\n  selector: 'c-icon',\r\n  templateUrl: './icon.component.html',\r\n  styleUrls: ['./icon.component.scss']\r\n})\r\nexport class IconComponent {\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  private _name: string;\r\n  // tslint:disable-next-line:variable-name\r\n  private _viewBox: string;\r\n\r\n  @Input() attributes: any = { role: 'img'};\r\n  @Input()\r\n  set name(name: string) {\r\n    this._name = name;\r\n  }\r\n  get name(): string {\r\n    const nameIsKebabCase = this._name && this._name.includes('-');\r\n    return nameIsKebabCase ? this.toCamelCase(this._name) : this._name;\r\n  }\r\n  @Input() content: string | string[];\r\n  @Input() size: 'custom' | 'custom-size' | 'sm' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl' | '5xl' | '6xl' | '7xl' | '8xl' | '9xl' | '' = '';\r\n  @Input() src: string;\r\n  @Input() title: string;\r\n  @Input() use = '';\r\n  @Input() customClasses: string;\r\n  @Input()\r\n  set viewBox(viewBox: string) {\r\n    this._viewBox = viewBox;\r\n  }\r\n  get viewBox(): string {\r\n    return this._viewBox || `0 0 ${ this.scale }`;\r\n  }\r\n  @Input() width;\r\n  @Input() height;\r\n\r\n  get titleCode() {\r\n    return this.title ? `<title>${this.title}</title>` : '';\r\n  }\r\n\r\n  get code() {\r\n    if (this.content) {\r\n      return this.content;\r\n    } else if (this.iconSet) {\r\n      return this.iconSet.getIcon(this.name);\r\n    }\r\n    console.warn(`c-icon component: icon name '${this.name}' does not exist for IconSet service. ` +\r\n      `To use icon by 'name' prop you need to add it to IconSet service. \\n`,\r\n      this.name\r\n    );\r\n    return undefined;\r\n  }\r\n  get iconCode() {\r\n    const code = Array.isArray(this.code) ? this.code[1] || this.code[0] : this.code;\r\n    return this.sanitizer.bypassSecurityTrustHtml(this.titleCode + code);\r\n  }\r\n\r\n  get scale() {\r\n    return Array.isArray(this.code) && this.code.length > 1 ? this.code[0] : '64 64';\r\n  }\r\n\r\n  get computedSize() {\r\n    const addCustom = !this.size && (this.width || this.height);\r\n    return this.size === 'custom' || addCustom ? 'custom-size' : this.size;\r\n  }\r\n  get computedClasses() {\r\n    const classes = classNames(\r\n      this.customClasses,\r\n      {\r\n        'c-icon': true,\r\n        [`c-icon-${this.computedSize}`]: !!this.computedSize\r\n      },\r\n    );\r\n    return classes;\r\n  }\r\n\r\n  constructor(\r\n    private sanitizer: DomSanitizer,\r\n    private iconSet: IconSetService\r\n  ) { }\r\n\r\n  toCamelCase(str) {\r\n    return str.replace(/([-_][a-z0-9])/ig, ($1) => {\r\n      return $1.toUpperCase().replace('-', '');\r\n    });\r\n  }\r\n}\r\n","import {Directive, ElementRef, Input, OnInit, Renderer2} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[cHtmlAttr]',\r\n  exportAs: 'cHtmlAttr'\r\n})\r\nexport class HtmlAttributesDirective implements OnInit {\r\n\r\n  @Input() cHtmlAttr: {[key: string]: any };\r\n\r\n  constructor(\r\n    private renderer: Renderer2,\r\n    private el: ElementRef\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    const attribs = this.cHtmlAttr;\r\n    for (const attr in attribs) {\r\n      if (attr === 'style' && typeof(attribs[attr]) === 'object' ) {\r\n        this.setStyle(attribs[attr]);\r\n      } else if (attr === 'class') {\r\n        this.addClass(attribs[attr]);\r\n      } else {\r\n        this.setAttrib(attr, attribs[attr]);\r\n      }\r\n    }\r\n  }\r\n\r\n  private setStyle(styles) {\r\n    // tslint:disable-next-line:forin\r\n    for (const style in styles) {\r\n      this.renderer.setStyle(this.el.nativeElement, style, styles[style] );\r\n    }\r\n  }\r\n\r\n  private addClass(classes) {\r\n    const classArray = (Array.isArray(classes) ? classes : classes.split(' '));\r\n    classArray.filter((element) => element.length > 0).forEach(element => {\r\n      this.renderer.addClass(this.el.nativeElement, element );\r\n    });\r\n  }\r\n\r\n  private setAttrib(key, value) {\r\n    value !== null ?\r\n      this.renderer.setAttribute(this.el.nativeElement, key, value ) :\r\n      this.renderer.removeAttribute(this.el.nativeElement, key);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {IconComponent} from './icon.component';\r\nimport { HtmlAttributesDirective } from '../shared/html-attr.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    IconComponent,\r\n    HtmlAttributesDirective\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  exports: [\r\n    IconComponent,\r\n    HtmlAttributesDirective\r\n  ],\r\n})\r\nexport class IconModule {}\r\n","import {ModuleWithProviders, NgModule, Optional, SkipSelf} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {IconSetService} from './icon-set.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n  ],\r\n  providers: [\r\n    IconSetService\r\n  ]\r\n})\r\nexport class IconSetModule {\r\n  constructor(@Optional() @SkipSelf() parentModule?: IconSetModule) {\r\n    if (parentModule) {\r\n      throw new Error(\r\n        'CoreUI IconSetModule is already loaded. Import it in the AppModule only');\r\n    }\r\n  }\r\n\r\n  static forRoot(): ModuleWithProviders<IconSetModule> {\r\n    return {\r\n      ngModule: IconSetModule,\r\n      providers: [\r\n        {provide: IconSetService}\r\n      ]\r\n    };\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of @coreui/icons-angular\r\n */\r\nexport { IconComponent } from './lib/icon/icon.component';\r\nexport { IconModule } from './lib/icon/icon.module';\r\nexport { IconSetService, IIconSet } from './lib/icon-set/icon-set.service';\r\nexport { IconSetModule } from './lib/icon-set/icon-set.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {HtmlAttributesDirective as Éµa} from './lib/shared/html-attr.directive';"],"names":[],"mappings":"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"}